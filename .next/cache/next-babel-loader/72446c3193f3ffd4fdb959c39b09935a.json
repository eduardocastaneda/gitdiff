{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/eduardocastaneda/Projekt/privat/gitdiff/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { findLatestDate } from \"../lib/helpers/commits\";\n\nfunction HomePage(_ref) {\n  var commits = _ref.commits;\n  var commitsElements = commits.map(function (commit) {\n    var message = commit.commit.message;\n\n    if (message.indexOf(\"*\") > -1) {\n      message = message.split(\"*\")[0];\n    }\n\n    return __jsx(\"li\", {\n      key: commit.sha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, message);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Welcome to Next.js!\", __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, commitsElements));\n}\n\nHomePage.getInitialProps = function _callee() {\n  var resMaster, resMasterJson, dateString, date, seconds, resDeveloper, commits;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(process.env.MASTER_BRANCH);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=\".concat(process.env.MASTER_BRANCH), {\n            headers: {\n              Authorization: \"token \".concat(process.env.GITHUB_TOKEN)\n            }\n          }));\n\n        case 3:\n          resMaster = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(resMaster.json());\n\n        case 6:\n          resMasterJson = _context.sent;\n          dateString = findLatestDate(resMasterJson);\n          date = new Date(dateString);\n          seconds = date.getSeconds();\n          date.setSeconds(seconds + 1);\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=\".concat(process.env.DEVELOP_BRANCH, \"&since=\").concat(date.toISOString), {\n            headers: {\n              Authorization: \"token \".concat(process.env.GITHUB_TOKEN)\n            }\n          }));\n\n        case 13:\n          resDeveloper = _context.sent;\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(resDeveloper.json());\n\n        case 16:\n          commits = _context.sent;\n          return _context.abrupt(\"return\", {\n            commits: commits\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/eduardocastaneda/Projekt/privat/gitdiff/pages/index.js"],"names":["fetch","findLatestDate","HomePage","commits","commitsElements","map","commit","message","indexOf","split","sha","getInitialProps","console","log","process","env","MASTER_BRANCH","headers","Authorization","GITHUB_TOKEN","resMaster","json","resMasterJson","dateString","date","Date","seconds","getSeconds","setSeconds","DEVELOP_BRANCH","toISOString","resDeveloper"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,SAASC,QAAT,OAA+B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC7B,MAAMC,eAAe,GAAGD,OAAO,CAACE,GAAR,CAAY,UAACC,MAAD,EAAY;AAC9C,QAAIC,OAAO,GAAGD,MAAM,CAACA,MAAP,CAAcC,OAA5B;;AACA,QAAIA,OAAO,CAACC,OAAR,CAAgB,GAAhB,IAAuB,CAAC,CAA5B,EAA+B;AAC7BD,MAAAA,OAAO,GAAGA,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAV;AACD;;AAED,WAAO;AAAI,MAAA,GAAG,EAAEH,MAAM,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBH,OAAtB,CAAP;AACD,GAPuB,CAAxB;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,eAAL,CAFF,CADF;AAMD;;AAEDF,QAAQ,CAACS,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AADyB;AAAA,2CAEDhB,KAAK,gGAC6Dc,OAAO,CAACC,GAAR,CAAYC,aADzE,GAE3B;AACEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,kBAAWJ,OAAO,CAACC,GAAR,CAAYI,YAAvB;AADN;AADX,WAF2B,CAFJ;;AAAA;AAEnBC,UAAAA,SAFmB;AAAA;AAAA,2CAUGA,SAAS,CAACC,IAAV,EAVH;;AAAA;AAUnBC,UAAAA,aAVmB;AAWnBC,UAAAA,UAXmB,GAWNtB,cAAc,CAACqB,aAAD,CAXR;AAYnBE,UAAAA,IAZmB,GAYZ,IAAIC,IAAJ,CAASF,UAAT,CAZY;AAanBG,UAAAA,OAbmB,GAaTF,IAAI,CAACG,UAAL,EAbS;AAczBH,UAAAA,IAAI,CAACI,UAAL,CAAgBF,OAAO,GAAG,CAA1B;AAdyB;AAAA,2CAgBE1B,KAAK,gGAC0Dc,OAAO,CAACC,GAAR,CAAYc,cADtE,oBAC8FL,IAAI,CAACM,WADnG,GAE9B;AACEb,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,kBAAWJ,OAAO,CAACC,GAAR,CAAYI,YAAvB;AADN;AADX,WAF8B,CAhBP;;AAAA;AAgBnBY,UAAAA,YAhBmB;AAAA;AAAA,2CAyBHA,YAAY,CAACV,IAAb,EAzBG;;AAAA;AAyBnBlB,UAAAA,OAzBmB;AAAA,2CA0BlB;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WA1BkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AA6BA,eAAeD,QAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { findLatestDate } from \"../lib/helpers/commits\";\n\nfunction HomePage({ commits }) {\n  const commitsElements = commits.map((commit) => {\n    let message = commit.commit.message;\n    if (message.indexOf(\"*\") > -1) {\n      message = message.split(\"*\")[0];\n    }\n\n    return <li key={commit.sha}>{message}</li>;\n  });\n\n  return (\n    <div>\n      Welcome to Next.js!\n      <ul>{commitsElements}</ul>\n    </div>\n  );\n}\n\nHomePage.getInitialProps = async () => {\n  console.log(process.env.MASTER_BRANCH);\n  const resMaster = await fetch(\n    `https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${process.env.MASTER_BRANCH}`,\n    {\n      headers: {\n        Authorization: `token ${process.env.GITHUB_TOKEN}`\n      }\n    }\n  );\n  const resMasterJson = await resMaster.json();\n  const dateString = findLatestDate(resMasterJson);\n  const date = new Date(dateString);\n  const seconds = date.getSeconds();\n  date.setSeconds(seconds + 1);\n\n  const resDeveloper = await fetch(\n    `https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${process.env.DEVELOP_BRANCH}&since=${date.toISOString}`,\n    {\n      headers: {\n        Authorization: `token ${process.env.GITHUB_TOKEN}`\n      }\n    }\n  );\n\n  const commits = await resDeveloper.json();\n  return { commits };\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}