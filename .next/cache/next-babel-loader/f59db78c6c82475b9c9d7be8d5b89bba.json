{"ast":null,"code":"var _jsxFileName = \"/Users/eduardocastaneda/Projekt/privat/gitdiff/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { findLatestDate } from \"../lib/helpers/commits\";\n\nfunction HomePage({\n  commits\n}) {\n  const commitsElements = commits.map(commit => {\n    let message = commit.commit.message;\n\n    if (message.indexOf(\"*\") > -1) {\n      message = message.split(\"*\")[0];\n    }\n\n    return __jsx(\"li\", {\n      key: commit.sha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, message);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Welcome to Next.js!\", __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, commitsElements));\n}\n\nHomePage.getInitialProps = async () => {\n  console.log(process.env.MASTER_BRANCH);\n  const resMaster = await fetch(`https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${process.env.MASTER_BRANCH}`, {\n    headers: {\n      Authorization: `token ${process.env.GITHUB_TOKEN}`\n    }\n  });\n  const resMasterJson = await resMaster.json();\n  const dateString = findLatestDate(resMasterJson);\n  const date = new Date(dateString);\n  const seconds = date.getSeconds();\n  date.setSeconds(seconds + 1);\n  const resDeveloper = await fetch(`https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${process.env.DEVELOP_BRANCH}&since=${date}`, {\n    headers: {\n      Authorization: `token ${process.env.GITHUB_TOKEN}`\n    }\n  });\n  const commits = await resDeveloper.json();\n  return {\n    commits\n  };\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/eduardocastaneda/Projekt/privat/gitdiff/pages/index.js"],"names":["fetch","findLatestDate","HomePage","commits","commitsElements","map","commit","message","indexOf","split","sha","getInitialProps","console","log","process","env","MASTER_BRANCH","resMaster","headers","Authorization","GITHUB_TOKEN","resMasterJson","json","dateString","date","Date","seconds","getSeconds","setSeconds","resDeveloper","DEVELOP_BRANCH"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC7B,QAAMC,eAAe,GAAGD,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAY;AAC9C,QAAIC,OAAO,GAAGD,MAAM,CAACA,MAAP,CAAcC,OAA5B;;AACA,QAAIA,OAAO,CAACC,OAAR,CAAgB,GAAhB,IAAuB,CAAC,CAA5B,EAA+B;AAC7BD,MAAAA,OAAO,GAAGA,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAV;AACD;;AAED,WAAO;AAAI,MAAA,GAAG,EAAEH,MAAM,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBH,OAAtB,CAAP;AACD,GAPuB,CAAxB;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,eAAL,CAFF,CADF;AAMD;;AAEDF,QAAQ,CAACS,eAAT,GAA2B,YAAY;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AACA,QAAMC,SAAS,GAAG,MAAMjB,KAAK,CAC1B,wFAAuFc,OAAO,CAACC,GAAR,CAAYC,aAAc,EADvF,EAE3B;AACEE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,SAAQL,OAAO,CAACC,GAAR,CAAYK,YAAa;AAD1C;AADX,GAF2B,CAA7B;AAQA,QAAMC,aAAa,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAA5B;AACA,QAAMC,UAAU,GAAGtB,cAAc,CAACoB,aAAD,CAAjC;AACA,QAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASF,UAAT,CAAb;AACA,QAAMG,OAAO,GAAGF,IAAI,CAACG,UAAL,EAAhB;AACAH,EAAAA,IAAI,CAACI,UAAL,CAAgBF,OAAO,GAAG,CAA1B;AAEA,QAAMG,YAAY,GAAG,MAAM7B,KAAK,CAC7B,wFAAuFc,OAAO,CAACC,GAAR,CAAYe,cAAe,UAASN,IAAK,EADnG,EAE9B;AACEN,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,SAAQL,OAAO,CAACC,GAAR,CAAYK,YAAa;AAD1C;AADX,GAF8B,CAAhC;AASA,QAAMjB,OAAO,GAAG,MAAM0B,YAAY,CAACP,IAAb,EAAtB;AACA,SAAO;AAAEnB,IAAAA;AAAF,GAAP;AACD,CA3BD;;AA6BA,eAAeD,QAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { findLatestDate } from \"../lib/helpers/commits\";\n\nfunction HomePage({ commits }) {\n  const commitsElements = commits.map((commit) => {\n    let message = commit.commit.message;\n    if (message.indexOf(\"*\") > -1) {\n      message = message.split(\"*\")[0];\n    }\n\n    return <li key={commit.sha}>{message}</li>;\n  });\n\n  return (\n    <div>\n      Welcome to Next.js!\n      <ul>{commitsElements}</ul>\n    </div>\n  );\n}\n\nHomePage.getInitialProps = async () => {\n  console.log(process.env.MASTER_BRANCH);\n  const resMaster = await fetch(\n    `https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${process.env.MASTER_BRANCH}`,\n    {\n      headers: {\n        Authorization: `token ${process.env.GITHUB_TOKEN}`\n      }\n    }\n  );\n  const resMasterJson = await resMaster.json();\n  const dateString = findLatestDate(resMasterJson);\n  const date = new Date(dateString);\n  const seconds = date.getSeconds();\n  date.setSeconds(seconds + 1);\n\n  const resDeveloper = await fetch(\n    `https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${process.env.DEVELOP_BRANCH}&since=${date}`,\n    {\n      headers: {\n        Authorization: `token ${process.env.GITHUB_TOKEN}`\n      }\n    }\n  );\n\n  const commits = await resDeveloper.json();\n  return { commits };\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}