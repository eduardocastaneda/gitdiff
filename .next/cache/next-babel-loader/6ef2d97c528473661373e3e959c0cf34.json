{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/eduardocastaneda/Projekt/privat/gitdiff/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { findLatestDate, fetchCommits } from \"../lib/helpers/commits\";\nimport { addSecond } from \"../lib/helpers/date\";\n\nfunction HomePage(_ref) {\n  var commits = _ref.commits;\n  var commitsElements = commits.map(function (commit) {\n    var message = commit.commit.message;\n\n    if (message.indexOf(\"*\") > -1) {\n      message = message.split(\"*\")[0];\n    }\n\n    return __jsx(\"li\", {\n      key: commit.sha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, message);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Next merge/deploy to Master\", __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, commitsElements));\n}\n\nHomePage.getInitialProps = function _callee() {\n  var resMasterJson, latestCommitDate, sinceDate, resDeveloper, commits;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(resMaster.json());\n\n        case 2:\n          resMasterJson = _context.sent;\n          latestCommitDate = findLatestDate(resMasterJson);\n          sinceDate = addSecond(latestCommitDate);\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=\".concat(process.env.DEVELOP_BRANCH, \"&since=\").concat(sinceDate), {\n            headers: {\n              Authorization: \"token \".concat(process.env.GITHUB_TOKEN)\n            }\n          }));\n\n        case 7:\n          resDeveloper = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(resDeveloper.json());\n\n        case 10:\n          commits = _context.sent;\n          return _context.abrupt(\"return\", {\n            commits: commits\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/eduardocastaneda/Projekt/privat/gitdiff/pages/index.js"],"names":["fetch","findLatestDate","fetchCommits","addSecond","HomePage","commits","commitsElements","map","commit","message","indexOf","split","sha","getInitialProps","resMaster","json","resMasterJson","latestCommitDate","sinceDate","process","env","DEVELOP_BRANCH","headers","Authorization","GITHUB_TOKEN","resDeveloper"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,wBAA7C;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,SAASC,QAAT,OAA+B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC7B,MAAMC,eAAe,GAAGD,OAAO,CAACE,GAAR,CAAY,UAACC,MAAD,EAAY;AAC9C,QAAIC,OAAO,GAAGD,MAAM,CAACA,MAAP,CAAcC,OAA5B;;AACA,QAAIA,OAAO,CAACC,OAAR,CAAgB,GAAhB,IAAuB,CAAC,CAA5B,EAA+B;AAC7BD,MAAAA,OAAO,GAAGA,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAV;AACD;;AAED,WAAO;AAAI,MAAA,GAAG,EAAEH,MAAM,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBH,OAAtB,CAAP;AACD,GAPuB,CAAxB;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,eAAL,CAFF,CADF;AAMD;;AAEDF,QAAQ,CAACS,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACGC,SAAS,CAACC,IAAV,EADH;;AAAA;AACnBC,UAAAA,aADmB;AAEnBC,UAAAA,gBAFmB,GAEAhB,cAAc,CAACe,aAAD,CAFd;AAGnBE,UAAAA,SAHmB,GAGPf,SAAS,CAACc,gBAAD,CAHF;AAAA;AAAA,2CAKEjB,KAAK,gGAC0DmB,OAAO,CAACC,GAAR,CAAYC,cADtE,oBAC8FH,SAD9F,GAE9B;AACEI,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,kBAAWJ,OAAO,CAACC,GAAR,CAAYI,YAAvB;AADN;AADX,WAF8B,CALP;;AAAA;AAKnBC,UAAAA,YALmB;AAAA;AAAA,2CAcHA,YAAY,CAACV,IAAb,EAdG;;AAAA;AAcnBV,UAAAA,OAdmB;AAAA,2CAelB;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WAfkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAkBA,eAAeD,QAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { findLatestDate, fetchCommits } from \"../lib/helpers/commits\";\nimport { addSecond } from \"../lib/helpers/date\";\n\nfunction HomePage({ commits }) {\n  const commitsElements = commits.map((commit) => {\n    let message = commit.commit.message;\n    if (message.indexOf(\"*\") > -1) {\n      message = message.split(\"*\")[0];\n    }\n\n    return <li key={commit.sha}>{message}</li>;\n  });\n\n  return (\n    <div>\n      Next merge/deploy to Master\n      <ul>{commitsElements}</ul>\n    </div>\n  );\n}\n\nHomePage.getInitialProps = async () => {\n  const resMasterJson = await resMaster.json();\n  const latestCommitDate = findLatestDate(resMasterJson);\n  const sinceDate = addSecond(latestCommitDate);\n\n  const resDeveloper = await fetch(\n    `https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${process.env.DEVELOP_BRANCH}&since=${sinceDate}`,\n    {\n      headers: {\n        Authorization: `token ${process.env.GITHUB_TOKEN}`\n      }\n    }\n  );\n\n  const commits = await resDeveloper.json();\n  return { commits };\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}