{"ast":null,"code":"import fetch from \"isomorphic-unfetch\";\nexport const findLatestDate = commits => {\n  if (!commits.length) return;\n  const latestCommit = commits[0];\n  return latestCommit.commit.author.date;\n};\nexport const fetchCommits = async (branch, sinceDate) => {\n  const sinceQuery = sinceDate ? `&since=${sinceDate}` : \"\";\n  const result = await fetch(`https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${branch}${sinceQuery}`, {\n    headers: {\n      Authorization: `token ${process.env.GITHUB_TOKEN}`\n    }\n  });\n  return result.json();\n};","map":{"version":3,"sources":["/Users/eduardocastaneda/Projekt/privat/gitdiff/lib/helpers/commits.js"],"names":["fetch","findLatestDate","commits","length","latestCommit","commit","author","date","fetchCommits","branch","sinceDate","sinceQuery","result","headers","Authorization","process","env","GITHUB_TOKEN","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACzC,MAAI,CAACA,OAAO,CAACC,MAAb,EAAqB;AAErB,QAAMC,YAAY,GAAGF,OAAO,CAAC,CAAD,CAA5B;AAEA,SAAOE,YAAY,CAACC,MAAb,CAAoBC,MAApB,CAA2BC,IAAlC;AACD,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,OAAOC,MAAP,EAAeC,SAAf,KAA6B;AACvD,QAAMC,UAAU,GAAGD,SAAS,GAAI,UAASA,SAAU,EAAvB,GAA2B,EAAvD;AACA,QAAME,MAAM,GAAG,MAAMZ,KAAK,CACvB,wFAAuFS,MAAO,GAAEE,UAAW,EADpF,EAExB;AACEE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,SAAQC,OAAO,CAACC,GAAR,CAAYC,YAAa;AAD1C;AADX,GAFwB,CAA1B;AASA,SAAOL,MAAM,CAACM,IAAP,EAAP;AACD,CAZM","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nexport const findLatestDate = (commits) => {\n  if (!commits.length) return;\n\n  const latestCommit = commits[0];\n\n  return latestCommit.commit.author.date;\n};\n\nexport const fetchCommits = async (branch, sinceDate) => {\n  const sinceQuery = sinceDate ? `&since=${sinceDate}` : \"\";\n  const result = await fetch(\n    `https://api.github.com/repos/eduardocastaneda/timereporting/commits?per_page=100&sha=${branch}${sinceQuery}`,\n    {\n      headers: {\n        Authorization: `token ${process.env.GITHUB_TOKEN}`\n      }\n    }\n  );\n\n  return result.json();\n};\n"]},"metadata":{},"sourceType":"module"}